### Draw graph of Variance and Chi-squared test

import numpy as np
import matplotlib.pyplot as plt

#N = 10
N = 12
#x = np.arange(N) + 1  # the x locations for the groups
x = [1,2,3,4,5,6,7,8,9,10,11,12, 24,48,72,96,120,144,168]
width = 0.27       # the width of the bars

fig = plt.figure()
ax = fig.add_subplot(111)

#y0 = [7.257063865661621, 4.018123626708984, 4.136061668395996, 10.954161643981934, 44.17935848236084, 9.21219539642334, 7.1514739990234375, 2.22015380859375, 6.209181785583496, 7.78507137298584]
#y0 = [46611.601660818575, 46647.561494598, 46645.436006467, 46653.912076451124, 47187.08305231159, 46567.92087243877, 46567.48192703854, 46711.94496462462, 46612.12101731071, 46605.340127725736]
y0 = [5.750224, 6.235271, 6.523195, 6.802026, 6.940228, 7.348467, 7.981356, 7.792602, 8.075660, 8.243859, 8.236531, 8.415257, 9.717799, 11.445423, 11.882774, 12.209522, 12.461339, 12.418761, 12.693674] # prediction result for 1-12 hours, 1-7days
#y0 = [13.524537, 14.584754, 14.653244, 15.885853, 16.657816, 16.728398, 17.113369, 18.216874, 19.121315, 18.076583, 18.883338, 19.910083, 22.206189, 25.146046, 26.422843, 26.372973, 26.829955, 27.076836, 27.258602] # prediction result for 1-12 hours, 1-7days
#bar0 = ax.bar(x, y0, width, color='g')
l0 = ax.scatter(x, y0, c='b')

#y1 = [237.12478637695312, 237.12478637695312, 237.12478637695312, 237.12478637695312, 237.12478637695312, 237.12478637695312, 237.12478637695312, 237.12478637695312, 237.12478637695312, 237.12478637695312]
#y1 = [8441.059694537355, 8260.31527442791, 8347.12962537674, 8850.242574745746, 10646.489256010409, 8648.425957147821, 8525.67879321031, 8027.286183879263, 8399.139268479394, 8543.657231580435]
#bar1 = ax.bar(x+width, y1, width, color='b') 

#y2 = [17.546802520751953, 17.276527404785156, 17.518882751464844, 21.911903381347656, 57.23625946044922, 19.14197540283203, 18.013568878173828, 17.016157150268555, 17.740501403808594, 18.253015518188477]
#y2 = [16111.579567462835, 16149.49475153701, 16124.382446577169, 16202.50768839785, 16722.342255023897, 16072.03502475098, 16068.616229459889, 16182.62596232967, 16126.043837930833, 16129.500880450396]
#bar2 = ax.bar(x+width*2, y2, width, color='g')

axis_font = {'fontname':'Arial', 'size':'20'}

#ax.set_ylabel('Variance')
#ax.set_ylabel('Chi-squared test')
ax.set_ylabel('Root-Mean-Squared-Error', **axis_font)
ax.set_xlabel('Hours', **axis_font)
#ax.set_xticks(x)
#ax.legend( (bar0[0], bar1[0], bar2[0]), ('Actual', 'DAL', 'ConvLSTM'), fontsize = 'xx-large' )
#ax.legend( (bar0[0], bar1[0], bar2[0]), ('DAL', 'ConvLSTM', 'CNN'), fontsize = 'xx-large' )
#ax.legend( bar0[0], 'Forecasting result', fontsize = 'xx-large' )

# Show the grid lines as dark grey lines
plt.grid(b=True, which='major', color='#666666', linestyle='-')

for tick in ax.xaxis.get_major_ticks():
    tick.label.set_fontsize(14)
for tick in ax.yaxis.get_major_ticks():
    tick.label.set_fontsize(16)

plt.show()
